(define (problem ZTRAVEL-5-15) (:domain zeno-travel)
(:objects
	person14 - person
	person15 - person
	person10 - person
	person11 - person
	person12 - person
	person13 - person
	person2 - person
	person3 - person
	city8 - city
	person1 - person
	person6 - person
	person7 - person
	person4 - person
	person5 - person
	city2 - city
	city3 - city
	person8 - person
	city1 - city
	city6 - city
	city7 - city
	city4 - city
	city5 - city
	person9 - person
	fl1 - flevel
	fl0 - flevel
	fl3 - flevel
	fl2 - flevel
	fl5 - flevel
	fl4 - flevel
	fl6 - flevel
	city0 - city
	plane3 - aircraft
	city10 - city
	city11 - city
	city12 - city
	city13 - city
	city9 - city
)
(:init
	(at plane3 city10)
	(fuel-level plane3 fl5)
	(at person1 city8)
	(at person2 city12)
	(at person3 city0)
	(at person4 city4)
	(at person5 city13)
	(at person6 city7)
	(at person7 city1)
	(at person8 city2)
	(at person9 city1)
	(at person10 city2)
	(at person11 city10)
	(at person12 city7)
	(at person13 city6)
	(at person14 city1)
	(at person15 city13)
	(next fl0 fl1)
	(next fl1 fl2)
	(next fl2 fl3)
	(next fl3 fl4)
	(next fl4 fl5)
	(next fl5 fl6)
	(K-obj plane3 person14)
	(K-obj plane3 person15)
	(K-obj plane3 person10)
	(K-obj plane3 person11)
	(K-obj plane3 person12)
	(K-obj plane3 person13)
	(K-obj plane3 person2)
	(K-obj plane3 person3)
	(K-obj plane3 city8)
	(K-obj plane3 person1)
	(K-obj plane3 person6)
	(K-obj plane3 person7)
	(K-obj plane3 person4)
	(K-obj plane3 person5)
	(K-obj plane3 city2)
	(K-obj plane3 city3)
	(K-obj plane3 person8)
	(K-obj plane3 city1)
	(K-obj plane3 city6)
	(K-obj plane3 city7)
	(K-obj plane3 city4)
	(K-obj plane3 city5)
	(K-obj plane3 person9)
	(K-obj plane3 fl1)
	(K-obj plane3 fl0)
	(K-obj plane3 fl3)
	(K-obj plane3 fl2)
	(K-obj plane3 fl5)
	(K-obj plane3 fl4)
	(K-obj plane3 fl6)
	(K-obj plane3 city0)
	(K-obj plane3 city10)
	(K-obj plane3 city11)
	(K-obj plane3 city12)
	(K-obj plane3 city13)
	(K-obj plane3 city9)
	(K-obj plane3 plane3)
	(K-ag-pred plane3 pred--fuel-level)
	(K-ag-pred plane3 pred--in)
	(K-ag-pred plane3 pred--at)
	(K-pred plane3 pred--at)
	(K-ag-pred plane3 pred--next)
	(K-pred plane3 pred--next)
)
(:goal	(and
(at person7 city1)
)
)
(:metric minimize (total-time))
)
